{
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "adminUserName":{
         "type":"string",
         "defaultValue":"azureuser",
         "metadata":{
            "description":"User name for the Virtual Machine. Pick a valid username otherwise there will be a BadRequest error."
         }
      },
      "adminPassword":{
         "type":"securestring",
         "metadata":{
            "description":"Admin password. Pick a complex password with uppercase letters, lowercase letters, digits, and symbols. The password should not be longer than 16. Otherwise you'll get a BadRequest error."
         }
      },
      "hpcUserName":{
         "type":"string",
         "defaultValue":"hpc",
         "metadata":{
            "description":"User for running HPC applications with shared home directory and SSH public key authentication setup.  This user cannot login from outside the cluster. Pick a valid username otherwise there will be a BadRequest error."
         }
      },
      "imageOffer":{
         "type":"string",
         "defaultValue":"CentOS-HPC",
         "allowedValues":[
            "CentOS",
            "CentOS-HPC"
         ],
         "metadata":{
            "description":"The OS image offer to use, eithe HPC with Intel MPI or the vanilla CentOS version."
         }
      },
      "headNodeSize":{
         "type":"string",
         "defaultValue":"Standard_DS3_v2",
         "allowedValues":[
            "Standard_A4",
            "Standard_A7",
            "Standard_A8",
            "Standard_A9",
            "Standard_A10",
            "Standard_A11",
            "Standard_D4",
            "Standard_D13",
            "Standard_D14",
            "Standard_DS4",
            "Standard_DS13",
            "Standard_DS14",
            "Standard_DS1_v2",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS11_v2",
            "Standard_DS12_v2",
            "Standard_DS13_v2",
            "Standard_DS14_v2",
            "Standard_F4",
            "Standard_F8",
            "Standard_F16",
            "Standard_G3",
            "Standard_G4",
            "Standard_G5",
            "Standard_GS3",
            "Standard_GS4",
            "Standard_GS5",
            "Standard_H8",
            "Standard_H16",
            "Standard_H8m",
            "Standard_H16m",
            "Standard_H16mr",
            "Standard_H16r",
            "Standard_L4",
            "Standard_L8",
            "Standard_L16",
            "Standard_L32"
         ],
         "metadata":{
            "description":"Size of the head node."
         }
      },
      "workerNodeSize":{
         "type":"string",
         "defaultValue":"Standard_A9",
         "allowedValues":[
            "Standard_A1",
            "Standard_A2",
            "Standard_A3",
            "Standard_A4",
            "Standard_A5",
            "Standard_A6",
            "Standard_A7",
            "Standard_A8",
            "Standard_A9",
            "Standard_A10",
            "Standard_A11",
            "Standard_D1",
            "Standard_D2",
            "Standard_D3",
            "Standard_D4",
            "Standard_D11",
            "Standard_D12",
            "Standard_D13",
            "Standard_D14",
            "Standard_DS1",
            "Standard_DS2",
            "Standard_DS3",
            "Standard_DS4",
            "Standard_D11",
            "Standard_D12",
            "Standard_D13",
            "Standard_D14",
            "Standard_DS11",
            "Standard_DS12",
            "Standard_DS13",
            "Standard_DS14",
            "Standard_DS1_v2",
            "Standard_DS2_v2",
            "Standard_DS3_v2",
            "Standard_DS4_v2",
            "Standard_DS5_v2",
            "Standard_DS11_v2",
            "Standard_DS12_v2",
            "Standard_DS13_v2",
            "Standard_DS14_v2",
            "Standard_F1",
            "Standard_F2",
            "Standard_F4",
            "Standard_F8",
            "Standard_F16",
            "Standard_G1",
            "Standard_G2",
            "Standard_G3",
            "Standard_G4",
            "Standard_G5",
            "Standard_GS1",
            "Standard_GS2",
            "Standard_GS3",
            "Standard_GS4",
            "Standard_GS5",
            "Standard_H8",
            "Standard_H16",
            "Standard_H8m",
            "Standard_H16m",
            "Standard_H16mr",
            "Standard_H16r",
            "Standard_L4",
            "Standard_L8",
            "Standard_L16",
            "Standard_L32"
         ],
         "metadata":{
            "description":"Size of the worker nodes."
         }
      },
      "workerNodeCount":{
         "type":"int",
         "defaultValue":2,
         "metadata":{
            "description":"This template creates N worker node. Use workerNodeCount to specify that N."
         }
      },
      "dataDiskSize":{
         "type":"int",
         "defaultValue":128,
         "metadata":{
            "description":"The size in GB of each data disk that is attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
         }
      },
      "storageAccountType":{
         "type":"string",
         "defaultValue":"Standard_LRS",
         "allowedValues":[
            "Standard_LRS",
            "Premium_LRS"
         ],
         "metadata":{
            "description":"Type of storage account to create for disks."
         }
      },
      "installClusterFilesystem":{
         "type":"string",
         "defaultValue":"None",
         "allowedValues":[
            "None",
            "BeeGFS"
         ],
         "metadata":{
            "description":"Cluster filesystem to install."
         }
      },
      "clusterFilesystemLocation":{
         "type":"string",
         "defaultValue":"Local",
         "allowedValues":[
            "Local",
            "Storage"
         ],
         "metadata":{
            "description":"Location for cluster filesystem storage blocks, local disk or storage backed disks."
         }
      },
      "customScriptUrl":{
         "type":"string",
         "defaultValue":"",
         "metadata":{
            "description":"Optional URL to custom setup script."
         }
      }
   },
   "variables":{
      "imagePublisher":"OpenLogic",
      "imageOffer":"[parameters('imageOffer')]",
      "imageSku":"7.1",
      "publicIPAddressType":"Dynamic",
      "publicIPAddressName":"publicips",
      "masterVMName":"master",
      "workerVMName":"worker",
      "armApiVersion":"2015-06-15",
      "computeApiVersion":"2016-04-30-preview",
      "avSetName":"avSet",
      "masterDiskCount":4,
      "workerDiskCount":4,
      "nicName":"nic",
      "networkSettings":{
         "virtualNetworkName":"virtualnetwork",
         "addressPrefix":"10.0.0.0/16",
         "subnet":{
            "dse":{
               "name":"dse",
               "prefix":"10.0.0.0/24",
               "vnet":"virtualnetwork"
            }
         },
         "statics":{
            "workerRange":{
               "base":"10.0.0.",
               "start":5
            },
            "master":"10.0.0.254"
         }
      },
      "vnetID":"[resourceId('Microsoft.Network/virtualNetworks',variables('networkSettings').virtualNetworkName)]",
      "subnetRef":"[concat(variables('vnetID'),'/subnets/',variables('networkSettings').subnet.dse.name)]",
      "templateBaseUrl":"https://raw.githubusercontent.com/grandparoach/hpc/master/slurm-on-centos-managed-disks/",
      "installationCLI":"[concat('bash azuredeploy.sh ', variables('masterVMName'), ' ', variables('workerVMName'), ' ', parameters('workerNodeCount'), ' ', parameters('hpcUserName'), ' ', variables('templateBaseUrl'), ' ', parameters('installClusterFilesystem'), ' ', parameters('clusterFilesystemLocation'), ' ', parameters('customScriptUrl'))]"
   },
   "resources":[
      {
         "type":"Microsoft.Compute/availabilitySets",
         "name":"[variables('avSetName')]",
         "apiVersion":"[variables('computeApiVersion')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "platformFaultDomainCount":"2",
            "platformUpdateDomainCount":"2",
            "managed":"true"
         }
      },
      {
         "apiVersion":"[variables('armApiVersion')]",
         "type":"Microsoft.Network/virtualNetworks",
         "name":"[variables('networkSettings').virtualNetworkName]",
         "location":"[resourceGroup().location]",
         "properties":{
            "addressSpace":{
               "addressPrefixes":[
                  "[variables('networkSettings').addressPrefix]"
               ]
            },
            "subnets":[
               {
                  "name":"[variables('networkSettings').subnet.dse.name]",
                  "properties":{
                     "addressPrefix":"[variables('networkSettings').subnet.dse.prefix]"
                  }
               }
            ]
         }
      },
      {
         "type":"Microsoft.Network/publicIPAddresses",
         "apiVersion":"[variables('armApiVersion')]",
         "name":"[variables('publicIPAddressName')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "publicIPAllocationMethod":"[variables('publicIPAddressType')]"
         }
      },
      {
         "type":"Microsoft.Network/networkSecurityGroups",
         "name":"nsg",
         "apiVersion":"[variables('armApiVersion')]",
         "location":"[resourceGroup().location]",
         "properties":{
            "securityRules":[
               {
                  "name":"SSH",
                  "properties":{
                     "protocol":"*",
                     "sourcePortRange":"*",
                     "destinationPortRange":"22",
                     "sourceAddressPrefix":"*",
                     "destinationAddressPrefix":"*",
                     "access":"Allow",
                     "priority":100,
                     "direction":"Inbound"
                  }
               }
            ]
         },
         "dependsOn":[

         ]
      },
      {
         "apiVersion":"[variables('armApiVersion')]",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[variables('nicName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]",
            "Microsoft.Network/networkSecurityGroups/nsg"
         ],
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[variables('networkSettings').statics.master]",
                     "publicIPAddress":{
                        "id":"[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                     },
                     "subnet":{
                        "id":"[variables('subnetRef')]"
                     }
                  }
               }
            ],
            "networkSecurityGroup":{
               "id":"[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg')]"
            }
         }
      },
      {
         "type":"Microsoft.Compute/disks",
         "name":"[concat('masterdatadisk', copyindex())]",
         "apiVersion":"[variables('computeApiVersion')]",
         "location":"[resourceGroup().location]",
         "copy":{
            "name":"foo",
            "count":"[variables('masterDiskCount')]"
         },
         "properties":{
            "creationData":{
               "createOption":"Empty"
            },
            "accountType":"Premium_LRS",
            "diskSizeGB":"[parameters('dataDiskSize')]"
         }
      },
      {
         "apiVersion":"2016-04-30-preview",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[variables('masterVMName')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
            "Microsoft.Compute/disks/masterdatadisk0",
            "Microsoft.Compute/disks/masterdatadisk1",
            "Microsoft.Compute/disks/masterdatadisk2",
            "Microsoft.Compute/disks/masterdatadisk3"
         ],
         "properties":{
            "hardwareProfile":{
               "vmSize":"[parameters('headNodeSize')]"
            },
            "osProfile":{
               "computername":"[variables('masterVMName')]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"[variables('imagePublisher')]",
                  "offer":"[variables('imageOffer')]",
                  "sku":"[variables('imageSku')]",
                  "version":"latest"
               },
               "osDisk":{
                  "createOption":"FromImage",
                  "managedDisk": {
                      "storageAccountType": "Premium_LRS"
                      }
               },
               "dataDisks":[
                  {
                     "lun":1,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('masterdatadisk', 0))]"
                     }
                  },
                  {
                     "lun":2,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('masterdatadisk', 1))]"
                     }
                  },
                  {
                     "lun":3,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('masterdatadisk', 2))]"
                     }
                  },
                  {
                     "lun":4,
                     "createOption":"attach",
                     "managedDisk":{
                        "id":"[resourceId('Microsoft.Compute/disks', concat('masterdatadisk', 3))]"
                     }
                  }
               ]
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                  }
               ]
            }
         }
      },
      {
         "apiVersion":"2015-06-15",
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(variables('masterVMName'), '/Installation')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMName'))]"
         ],
         "properties":{
            "publisher": "Microsoft.Azure.Extensions",
            "type":"CustomScript",
            "typeHandlerVersion":"2.0",
            "autoUpgradeMinorVersion": true,
            "settings":{
               "fileUris":[
                  "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
               ],
               "commandToExecute":"[variables('installationCLI')]"
            }
         }
      },
      {
         "apiVersion":"2015-06-15",
         "type":"Microsoft.Compute/virtualMachines/extensions",
         "name":"[concat(variables('workerVMName'), copyindex(), '/Installation')]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Compute/virtualMachines/', variables('workerVMName'), copyindex())]"
         ],
         "copy":{
            "name":"foo",
            "count":"[parameters('workerNodeCount')]"
         },
         "properties":{
            "publisher":"Microsoft.Azure.Extensions",
            "type":"CustomScript",
            "typeHandlerVersion":"2.0",
             "autoUpgradeMinorVersion": true,
            "settings":{
               "fileUris":[
                  "[concat(variables('templateBaseUrl'), 'azuredeploy.sh')]"
               ],
               "commandToExecute":"[variables('installationCLI')]"
            }
         }
      },
      {
         "apiVersion":"[variables('armApiVersion')]",
         "type":"Microsoft.Network/networkInterfaces",
         "name":"[concat(variables('nicName'), 'worker', copyindex())]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/virtualNetworks/', variables('networkSettings').virtualNetworkName)]"
         ],
         "copy":{
            "name":"foo",
            "count":"[parameters('workerNodeCount')]"
         },
         "properties":{
            "ipConfigurations":[
               {
                  "name":"ipconfig1",
                  "properties":{
                     "privateIPAllocationMethod":"Static",
                     "privateIPAddress":"[concat(variables('networkSettings').statics.workerRange.base, copyindex(variables('networkSettings').statics.workerRange.start))]",
                     "subnet":{
                        "id":"[variables('subnetRef')]"
                     }
                  }
               }
            ]
         }
      },
      {
         "apiVersion":"2016-04-30-preview",
         "type":"Microsoft.Compute/virtualMachines",
         "name":"[concat(variables('workerVMName'), copyindex())]",
         "location":"[resourceGroup().location]",
         "dependsOn":[
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), 'worker', copyindex())]",
            "[concat('Microsoft.Compute/availabilitySets/', variables('avSetName'))]"
         ],
         "copy":{
            "name":"foo",
            "count":"[parameters('workerNodeCount')]"
         },
         "properties":{
            "availabilitySet":{
               "id":"[resourceId('Microsoft.Compute/availabilitySets', variables('avSetName'))]"
            },
            "hardwareProfile":{
               "vmSize":"[parameters('workerNodeSize')]"
            },
            "osProfile":{
               "computername":"[concat(variables('workerVMName'), copyindex())]",
               "adminUsername":"[parameters('adminUsername')]",
               "adminPassword":"[parameters('adminPassword')]"
            },
            "storageProfile":{
               "imageReference":{
                  "publisher":"[variables('imagePublisher')]",
                  "offer":"[variables('imageOffer')]",
                  "sku":"[variables('imageSku')]",
                  "version":"latest"
               },
               "osDisk":{
                  "createOption":"FromImage"
               },
               "dataDisks":[
               ]
            },
            "networkProfile":{
               "networkInterfaces":[
                  {
                     "id":"[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), 'worker', copyindex()))]"
                  }
               ]
            }
         }
      }
   ]
}
